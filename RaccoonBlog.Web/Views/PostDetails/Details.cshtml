@using RaccoonBlog.Web.Infrastructure.Common
@model PostViewModel
@{
	ViewBag.Title = @Model.Post.Title;
}
@{
	ViewBag.CurrentUrl = Url.Action("Details", new { Model.Post.Id, Model.Post.Slug });
}

<article>
	<nav class="nextPrev">
		@if (Model.PreviousPost != null)
		{
			<a class="pull-left" href="@Url.Action("Details", new {id = Model.PreviousPost.DomainId, Model.PreviousPost.Slug})">‹&nbsp;previous post</a>
		}
		@if (Model.NextPost != null)
		{
			<a class="pull-right" href="@Url.Action("Details", new {id = Model.NextPost.DomainId, Model.NextPost.Slug})">next post&nbsp;›</a>
		}
	</nav>
	<time>
		<span>@Model.Post.PublishedAt.ToString("MMM dd")</span>
		@Model.Post.PublishedAt.ToString("yyyy HH:mm")
	</time>
	<a href="@Url.Action("Details", new { Model.Post.Id, Model.Post.Slug })">
		@if (Model.SeriesInfo == null)
		{
			<h2>@Model.Post.Title</h2>
		}
		else
		{
			<h2><span class="seriesTitle">@Html.Raw(TitleConverter.ToSeriesTitle(Model.Post.Title))</span>@Html.Raw(TitleConverter.ToPostTitle(Model.Post.Title))</h2>
		}
	</a>
	<div class="clearfix"></div>
	<hr />
	<div class="articleContent">
		@Model.Post.Body
	</div>

	<div class="postData">



		<a href='@string.Format("http://twitter.com/intent/tweet?status={0}+{1} via @{2}", Model.Post.Title, Request.Url.OriginalString, Model.Post.Author.TwitterNick)'>
			<span class="socicon twitter">a</span><span>Tweet</span>
		</a>
		<a style='text-decoration:none;' type="icon_link" onclick="window.open('@string.Format("http://www.facebook.com/sharer/sharer.php?u={0}&title={1}", Request.Url.OriginalString, Model.Post.Title)','sharer','toolbar=0,status=0,width=580,height=325');" href="javascript: void(0)">
			<span class="socicon facebook">b</span><span>share</span>
		</a>
		<a style='text-decoration:none;' type="icon_link" onclick="popUp=window.open('@string.Format("https://plus.google.com/share?url={0}", Request.Url.OriginalString)', 'popupwindow', 'scrollbars=yes,width=600,height=400');popUp.focus();return false" href="javascript: void(0)">
			<span class="socicon gplus">c</span><span>share</span>
		</a>
		<a href="#comments">
			<span class="glyphicon glyphicon-comment" aria-hidden="true"></span><span>@Model.Comments.Count comments</span>
		</a>
		@if (Model.Post.Tags.Count > 0)
		{
			<div class="tags pull-right-lg">
				<span class="glyphicon glyphicon-tag" aria-hidden="true"></span> Tags:
				<ul>
					@foreach (var tag in Model.Post.Tags)
					{
						<li><a href="@Url.Action("Tag", "Posts", new {tag.Slug})">@tag.Name</a></li>
					}
				</ul>
			</div>
		}


		<div class="clearfix"></div>
		<hr style="margin: 0;" />
	</div>


	<nav class="nextPrev">
		@if (Model.PreviousPost != null)
		{
			<a class="pull-left" href="@Url.Action("Details", new {id = Model.PreviousPost.DomainId, Model.PreviousPost.Slug})">‹&nbsp;previous post</a>
		}
		@if (Model.NextPost != null)
		{
			<a class="pull-right" href="@Url.Action("Details", new {id = Model.NextPost.DomainId, Model.NextPost.Slug})">next post&nbsp;›</a>
		}
	</nav>


	@if (Model.SeriesInfo != null)
	{
		<section class="postsInSeries">
			<h4 class="text-left">
				More posts in &quot;@Model.SeriesInfo.SeriesTitle&quot; series:
			</h4>
			<ol>
				@foreach (var post in Model.SeriesInfo.PostsInSeries)
				{
					if (post.PublishAt >= DateTimeOffset.Now)
					{
						<li><em>(@(post.PublishAt.ToString("dd MMM yyyy")))</em>&nbsp;@(post.Title)</li>
					}
					else
					{
						if (post.Id == Model.Post.Id)
						{
							<li><strong><em>(@(post.PublishAt.ToString("dd MMM yyyy")))</em>&nbsp;<a href="@Url.Action("Details", new { post.Id, post.Slug })">@(post.Title)</a></strong></li>
						}
						else
						{
							<li><em>(@(post.PublishAt.ToString("dd MMM yyyy")))</em>&nbsp;<a href="@Url.Action("Details", new { post.Id, post.Slug })">@(post.Title)</a></li>
						}
					}
				}
			</ol>
		</section>
	}
	<hr />
</article>



<section class="comments">
	<a name="comments"></a>
	<h2>Comments</h2>

	@foreach (var comment in Model.Comments.Select((value, i) => new { value, i }))
	{
		if (@comment.value.IsImportant)
		{
			<article class="comment important">
				<a name='@(string.Format("comment{0}", (comment.i+1)))'></a>
				<div class="avatar"><img src='@(string.Format("http://www.gravatar.com/avatar.php?gravatar_id={0}&size=50&default=identicon", @comment.value.EmailHash))' alt="@comment.value.Author" /></div>
				<div class="postedBy"><a target="_blank" title='@(string.Format("Comment by {0}", @comment.value.Author))'>@comment.value.Author</a></div>
				<time>
					@DateTime.Parse(@comment.value.CreatedAt).ToString("dd MMM yyyy")<br />
					@DateTime.Parse(@comment.value.CreatedAt).ToString("HH:mm tt")
				</time>
				<div class="comment-body raw_html">
					@comment.value.Body
				</div>
			</article>
		}
		else
		{
			<article class="comment">
				<a name='@(string.Format("comment{0}", (comment.i+1)))'></a>
				<div class="avatar"><img src='@(string.Format("http://www.gravatar.com/avatar.php?gravatar_id={0}&size=50&default=identicon", @comment.value.EmailHash))' alt="@comment.value.Author" /></div>
				<time>
					@DateTime.Parse(@comment.value.CreatedAt).ToString("dd MMM yyyy")<br />
					@DateTime.Parse(@comment.value.CreatedAt).ToString("HH:mm tt")
				</time>
				<div class="postedBy"><a target="_blank" title='@(string.Format("Comment by {0}", @comment.value.Author))'>@comment.value.Author</a></div>
				<div class="comment-body raw_html">
					@comment.value.Body
				</div>
			</article>
		}
	}

	<div class="messageWrapper">
		<div id="message" style="visibility:hidden"></div>
	</div>

	<article id="postComment">
		@if (Model.Post.IsCommentAllowed == false || Model.AreCommentsClosed)
		{
			<div class="commentsClosedMessage">Comments have been closed on this topic.</div>
		}
		else
		{
			if (Model.IsLoggedInCommenter == false)
			{
				<div class="openid-wrapper">
					<form id="openid" action="@Url.Action("Login", "Social")" method="post">
						<noscript>
							<p>
								OpenID is service that allows you to log-on to many different websites using a single identity.
								Find out <a href="http://openid.net/what/">more about OpenID</a> and <a href="http://openid.net/get/">how to get an OpenID enabled account</a>.
							</p>
						</noscript>

						@Html.Hidden("returnUrl", Url.RelativeToAbsolute((string)ViewBag.CurrentUrl))
					</form>
				</div>
			}
			<h3>
				<a id="comments-form-location">Join the conversation...</a>
			</h3>
			<div class="comment-form-wrapper">
				@using (Html.BeginForm("Comment", "PostDetails", new { Model.Post.Id, key = Model.Post.ShowPostEvenIfPrivate }))
				{
					<div class="row">
						<div class="form_item form-group col-sm-12 col-md-4">

							<div class="input-group">
								<label class="input-group-addon">
									<span class="form_item_name">Name</span>
								</label>
								@Html.TextBoxFor(x => x.Input.Name, new { @class = "form-control" })
								@Html.ValidationMessageFor(x => x.Input.Name)
							</div>
						</div>
						<div class="form_item form-group col-sm-6 col-md-4">
							<div class="input-group">
								<label class="input-group-addon">
									<span class="form_item_name">Email</span>
								</label>
								@Html.TextBoxFor(x => x.Input.Email, new { @class = "form-control email", type = "email" })
								@Html.ValidationMessageFor(x => x.Input.Email)
							</div>
						</div>
						<div class="form_item form-group col-sm-6 col-md-4">
							<div class="input-group">
								<label class="input-group-addon">
									<span class="form_item_name">Url</span>
								</label>
								@Html.TextBoxFor(x => x.Input.Url, new { @class = "form-control" })
								@Html.ValidationMessageFor(x => x.Input.Url)
							</div>
						</div>
						<div class="form_item form-group col-sm-12">
							<div class="input-group">
								<label class="input-group-addon">
									<span class="form_item_name">Comments</span>
								</label>
								@Html.TextAreaFor(x => x.Input.Body, new { rows = 9, @class = "form-control" })
								@Html.ValidationMessageFor(x => x.Input.Body)
							</div>
						</div>
						@if (Model.IsTrustedCommenter == false)
						{
							<div class="form_item form-group col-sm-12">
								<div class="input-group">
									<label class="input-group-addon">
										<span class="form_item_name">Human?</span>
									</label>
									@Html.GenerateCaptcha()
									@Html.ValidationMessage("CaptchaNotValid")
								</div>
							</div>
						}
					</div>
					@Html.HiddenFor(x => x.Input.CommenterKey)
					<input type="submit" value="Post Comment" class="btn btn-primary pull-right">
					<div class="clearfix"></div>
				}
			</div>
		}
	</article>
</section>
@section Style {
	<link rel="canonical" href="@Url.AbsoluteAction("Details", new { Model.Post.Id, Model.Post.Slug })">
}
@section Script {
	<script type="text/javascript">
		window.twttr = (function (d, s, id) {
			var js, fjs = d.getElementsByTagName(s)[0], t = window.twttr || {};
			if (d.getElementById(id)) return;
			js = d.createElement(s);
			js.id = id;
			js.src = "https://platform.twitter.com/widgets.js";
			fjs.parentNode.insertBefore(js, fjs);
			t._e = [];
			t.ready = function (f) { t._e.push(f); };
			return t;
		}(document, "script", "twitter-wjs"));
	</script>
	@if (Model.IsLoggedInCommenter == false)
	{
		<script type="text/javascript">

			$(function () {
				$('#openid').openid({
					img_path: '@Url.Content("~/Content/css/images/")',
					txt: {
						label: 'Select your Open ID provider',
						username: 'Username',
						title: 'Social Login',
						sign: 'Sign In'
					}
				});
			});
		</script>
	}
}